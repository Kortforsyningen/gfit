{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Geoide-fit med krydsvalidering \u00b6 Form\u00e5let med dette projekt er, at automatisere nedenst\u00e5ende fremgangsm\u00e5de: En gravimetrisk opm\u00e5lt geoide tilpasses geoide-h\u00f8jden m\u00e5lt i et antal punkter forskellige steder i landet. For hvert punkt bliver lavet en geoide-tilpasning uden dette punkt. Efterf\u00f8lgende bliver en interpoleret v\u00e6rdi i det udeladte punkts lokation sammenlignet med punktets m\u00e5lte geoide-h\u00f8jde. Resultatet er filen med de oprindelige m\u00e5lepunkter beriget med en kolonne ekstra, der indeholder den interpolerede geoide-h\u00f8jde. Ved sammenligning med det enkelte punkts egen m\u00e5ling og den interpolerede v\u00e6rdi afg\u00f8r vi, om punktet kan bruges til det endelige geoide-fit, eller om det b\u00f8r kasseres som en outlier. Disse sider indeholder f\u00f8lgende: Beskrivelser af de anvendte FORTRAN-programmer fitgeoid1 , gbin og geoid . Vejledning i installation og k\u00f8rsel af automatiseringsprogrammerne gfit-cv , gfit-check , gfit-gather og gfit-clean . Beskrivelse af data-materialet, som blev anvendt til udviklingen af denne pakke. Disse er dog ikke en foruds\u00e6tning for at bruge programmet.","title":"Home"},{"location":"#geoide-fit-med-krydsvalidering","text":"Form\u00e5let med dette projekt er, at automatisere nedenst\u00e5ende fremgangsm\u00e5de: En gravimetrisk opm\u00e5lt geoide tilpasses geoide-h\u00f8jden m\u00e5lt i et antal punkter forskellige steder i landet. For hvert punkt bliver lavet en geoide-tilpasning uden dette punkt. Efterf\u00f8lgende bliver en interpoleret v\u00e6rdi i det udeladte punkts lokation sammenlignet med punktets m\u00e5lte geoide-h\u00f8jde. Resultatet er filen med de oprindelige m\u00e5lepunkter beriget med en kolonne ekstra, der indeholder den interpolerede geoide-h\u00f8jde. Ved sammenligning med det enkelte punkts egen m\u00e5ling og den interpolerede v\u00e6rdi afg\u00f8r vi, om punktet kan bruges til det endelige geoide-fit, eller om det b\u00f8r kasseres som en outlier. Disse sider indeholder f\u00f8lgende: Beskrivelser af de anvendte FORTRAN-programmer fitgeoid1 , gbin og geoid . Vejledning i installation og k\u00f8rsel af automatiseringsprogrammerne gfit-cv , gfit-check , gfit-gather og gfit-clean . Beskrivelse af data-materialet, som blev anvendt til udviklingen af denne pakke. Disse er dog ikke en foruds\u00e6tning for at bruge programmet.","title":"Geoide-fit med krydsvalidering"},{"location":"automation-flow/","text":"mermaid.initialize({startOnLoad:true}); Automatiserings-ops\u00e6tningen \u00b6 F\u00f8lgende er en illustration af, hvad gfit-cv og gfit-gather hver is\u00e6r g\u00f8r for at producere det endelige resultat af krydsvalideringen. flowchart TD subgraph CV [Leave one point out at the time for NNN points] direction TB I(points_measured.n) --> Q[gfit-cv] Q -->|Remove line NNN| Y_(points_measured_excluding_line_NNN.n) Q -->|Use position from line NNN| Z_(point_position_from_line_NNN.dat) end X_(geoid_gravimetric.gri) -->|unchanged| X Y_ --> Y Z_ --> Z subgraph STANDARD [Work directory for point NNN] direction TB X(geoid_gravimetric.gri) --> A[fitgeoid1] Y(points_measured.n) --> A A -->|produces| X2(geoid_fitted.gri) A -->|produces| X2a(\"(other files)\") X2 -->B[gbin] B -->|produces| X3(geoid_fitted.bin) X3 --> C[geoid] Z(point_position.dat) --> C C -->|produces| Z2(point_interpolated_geoid_data.dat) end subgraph GATHER [Combine interpolated point values with corresponding measurements] direction TB Z2 --> Z2_NNN(NNN) Z2_negN(...) --> W[gfit-gather] Z2_neg2(NNN - 2) --> W Z2_neg1(NNN - 1) --> W Z2_NNN(NNN) --> W Z2_pos1(NNN + 1) --> W Z2_pos2(NNN + 2) --> W Z2_posN(...) --> W W --> Z2_(points_measured_gathered.csv) end style A fill:#f0f1cc,stroke:#ccc style B fill:#f0f1cc,stroke:#ccc style C fill:#f0f1cc,stroke:#ccc style Q fill:#f0f1cc,stroke:#ccc style W fill:#f0f1cc,stroke:#ccc style CV fill:#fcfcfc,stroke:#ddd style GATHER fill:#fcfcfc,stroke:#ddd style STANDARD fill:#fcfcfc,stroke:#ddd gfit-cv","title":"Automation flow"},{"location":"automation-flow/#automatiserings-opstningen","text":"F\u00f8lgende er en illustration af, hvad gfit-cv og gfit-gather hver is\u00e6r g\u00f8r for at producere det endelige resultat af krydsvalideringen. flowchart TD subgraph CV [Leave one point out at the time for NNN points] direction TB I(points_measured.n) --> Q[gfit-cv] Q -->|Remove line NNN| Y_(points_measured_excluding_line_NNN.n) Q -->|Use position from line NNN| Z_(point_position_from_line_NNN.dat) end X_(geoid_gravimetric.gri) -->|unchanged| X Y_ --> Y Z_ --> Z subgraph STANDARD [Work directory for point NNN] direction TB X(geoid_gravimetric.gri) --> A[fitgeoid1] Y(points_measured.n) --> A A -->|produces| X2(geoid_fitted.gri) A -->|produces| X2a(\"(other files)\") X2 -->B[gbin] B -->|produces| X3(geoid_fitted.bin) X3 --> C[geoid] Z(point_position.dat) --> C C -->|produces| Z2(point_interpolated_geoid_data.dat) end subgraph GATHER [Combine interpolated point values with corresponding measurements] direction TB Z2 --> Z2_NNN(NNN) Z2_negN(...) --> W[gfit-gather] Z2_neg2(NNN - 2) --> W Z2_neg1(NNN - 1) --> W Z2_NNN(NNN) --> W Z2_pos1(NNN + 1) --> W Z2_pos2(NNN + 2) --> W Z2_posN(...) --> W W --> Z2_(points_measured_gathered.csv) end style A fill:#f0f1cc,stroke:#ccc style B fill:#f0f1cc,stroke:#ccc style C fill:#f0f1cc,stroke:#ccc style Q fill:#f0f1cc,stroke:#ccc style W fill:#f0f1cc,stroke:#ccc style CV fill:#fcfcfc,stroke:#ddd style GATHER fill:#fcfcfc,stroke:#ddd style STANDARD fill:#fcfcfc,stroke:#ddd gfit-cv","title":"Automatiserings-ops\u00e6tningen"},{"location":"data/","text":"Data kommer fra to kilder: Fil Beskrivelse Kilde gravgeoid2021.gri Gravimetrisk geoide i GRAVSOFT-format (ASCII) ? gpslev_*.n Forskellige versioner af SDFEs GNSS/NIV-h\u00f8jder ( \\(N_{obs}\\) ) med \\(\\sigma\\) SDFE De observerede geoideh\u00f8jder \\(N_{obs}\\) er baseret p\u00e5 nivellement (i DVR90) \\(H_{niv}\\) og GNSS observationer \\(N_{ellip}\\) af ellipsoideh\u00f8jden: \\[ \\begin{equation} \\displaylines{N_{obs} = h_{ellip} \u2013 H_{niv} \\\\ e = N_{obs} \u2013 N_{grav} \\\\ e = e_{trend} + e'} \\end{equation} \\] Bias er ca. \\(0.317\\) m \\(e'\\) fittes med collocation (kriging) vha. programmet geogrid .","title":"Data"},{"location":"installation/","text":"Krav og foruds\u00e6tninger \u00b6 conda | repo git Programmer fra GRAVSOFT-pakken: fitgeoid1.exe , gbin.exe and geoid.exe Skridt \u00b6 \u00c5bn en Anaconda Prompt G\u00e5 til en mappe, hvor du vil have gfit liggende. Eksempel: > c: > cd / c:\\> Hent koden: Eksempel: c:\\> git clone https://github.com/Kortforsyningen/gfit c:\\> cd gfit Install\u00e9r gfit : Eksempel: c:\\gfit> conda env create --file environment.yml # wait / agree to install c:\\gfit> python -m pip install -r requirements.txt # Install in developer mode (makes possible to fetch minor updates without needing to re-install) c:\\gfit> python -m pip install -e .","title":"Installation"},{"location":"installation/#krav-og-forudstninger","text":"conda | repo git Programmer fra GRAVSOFT-pakken: fitgeoid1.exe , gbin.exe and geoid.exe","title":"Krav og foruds\u00e6tninger"},{"location":"installation/#skridt","text":"\u00c5bn en Anaconda Prompt G\u00e5 til en mappe, hvor du vil have gfit liggende. Eksempel: > c: > cd / c:\\> Hent koden: Eksempel: c:\\> git clone https://github.com/Kortforsyningen/gfit c:\\> cd gfit Install\u00e9r gfit : Eksempel: c:\\gfit> conda env create --file environment.yml # wait / agree to install c:\\gfit> python -m pip install -r requirements.txt # Install in developer mode (makes possible to fetch minor updates without needing to re-install) c:\\gfit> python -m pip install -e .","title":"Skridt"},{"location":"standard-flow/","text":"mermaid.initialize({startOnLoad:true}); Overblik over de eksisterende programmer og deres anvendelse \u00b6 F\u00f8lgende er en grafisk illustration af, hvilke filer hvert program bruger og producerer. graph TD X(geoid_gravimetric.gri) --> A[fitgeoid1] Y(points_measured.n) -->A A -->|produces| X2(geoid_fitted.gri) A -->|produces| X2a(\"(other files)\") X2 -->B[gbin] B -->|produces| X3(geoid_fitted.bin) X3 --> C[geoid] Z(point_position.dat) --> C C -->|produces| Z2(point_interpolated_geoid_data.dat) style A fill:#f0f1cc style B fill:#f0f1cc style C fill:#f0f1cc style X2a fill:#ddd,stroke:#ccc fitgeoid1 tilpasser en gravimetrisk geoide \\(N_{grav}\\) til observerede geoideh\u00f8jder \\(N_{obs}\\) . gbin overs\u00e6tter geoide-data mellem klar tekst og bin\u00e6rt format. geoid tager geoide-data i bin\u00e6rt format og interpolerer geoide-h\u00f8jden i et givet punkt. Alle tre programmer kan k\u00f8res enten interaktivt eller med forprogrammeret input (via stdin ) efter f\u00f8lgende form: [PROGRAM] < input > output hvor [PROGRAM] \\(\\in\\) \\(\\{\\) fitgeoid1 , gbin , geoid \\(\\}\\) . input og output er arbitr\u00e6re filnavne. input sendes til programmet via stdin og indeholder parametre og filnavne p\u00e5 input data til det p\u00e5g\u00e6ldende program i samme r\u00e6kkef\u00f8lge, det ville komme i under interaktivt input. output overskrives med programmets output til stdout . Endvidere kan programmerne have sideeffekter, som producerede filer (se nedenfor). Program: fitgeoid1 \u00b6 Eksempler input -eksempel geoid_gravimetric.gri geoid_obs_gps+lev.n geoid_fitted.gri 20 1 1 t 60.0 0.004 54 58 7 17 .01 .0166 input -forklaring Fil Beskrivelse geoid_gravimetric.gri Inputfil - geoiden som skal fittes geoid_obs_gps+lev.n Datafil som geoiden skal fittes til geoid_fitted.gri Output geoide efter fit 20 1 1 t Fit parametre: nqmax, itrend, ipred, lsigma Itrend 0=ingen fit, 1= kun bias, 2=plan 60.0 0.004 \u00bd-correlation-length sigma/noise p\u00e5 N(obs) is the smallest std. dev. used when data is given with sigmas 54 58 7 17 .01 .0166 Grid specs lat1 lat2 lon1 lon2 spacing-lat spacing-lon output -eksempel ********************************************************* * FITGEOID - GRAVSOFT geoid fitter - vers. OCT11 * ********************************************************* Internal Lambert map projection center: 55.750 12.000 === Subtraction: Ngps minus geoid grid: === number of prediction points: 156 within area 54.4949 57.7404 8.1231 15.0013 grid file information: gridlab: 53.5000 58.0000 7.0000 17.0000 0.0100 0.0167 451 601 selected subgrid: 54.4900 57.7500 8.1167 15.0167 points: 327 x 415 = 135705, zero values: 0, unknown (9999): 0 min max mean std.dev.: 31.23 40.69 36.92 2.24 points predicted: 156, skipped points: 0 minimum distance to grid edges for predictions: 28.9 km statistics: mean std.dev. min max unknown original data : 38.737 1.430 34.523 40.906 0 grid interpolation results: 38.419 1.452 34.070 40.625 0 predicted values output : 0.318 0.029 0.275 0.479 0 === Gridding of GPS corrections === minimal and maximal standard deviations of data: 0.00 0.00 detrending done on data, itrend = 1 no of trend parameters estimated: 1 solution: 0.3181E+00 detrended data (min,max,mean,stddev): -0.043 0.161 0.000 0.029 collocation prediction - sqrc0,xhalf(km),rmsn = 0.03 60.00 0.00 selection: 20 closest points per quadrant data organization limits in lambert proj: -139278. 222067. -239869. 191036. subrectangles (n,e,total): 7 8 56 size (km): 51.62 53.86, average pts per rect (rdat): 2.786 max points in subrects: 14, percentage with no points: 42.9 predicted: 271051 points prediction pts mean std.dev. min max: 0.33 0.03 0.28 0.47 prediction error values min max: 0.00 0.03 === Addition of gridded corrections to geoid file === number of prediction points: 271051 within area 53.5000 58.0000 7.0000 17.0000 grid file information: gridlab: 53.5000 58.0000 7.0000 17.0000 0.0100 0.0167 451 601 selected subgrid: 53.5000 58.0000 7.0000 17.0000 points: 451 x 601 = 271051, zero values: 0, unknown (9999): 0 min max mean std.dev.: 26.68 40.99 36.30 3.22 points predicted: 271051, skipped points: 0 minimum distance to grid edges for predictions: 0.0 km statistics: mean std.dev. min max unknown original data : 0.328 0.028 0.276 0.475 0 grid interpolation results: 36.300 3.223 26.681 40.990 0 predicted values output : 36.628 3.210 26.999 41.309 0 === Fit of GPS levelling data to fitted geoid === Name of fitted geoid: fg7p_4.gri number of prediction points: 156 within area 54.4949 57.7404 8.1231 15.0013 grid file information: gridlab: 53.5000 58.0000 7.0000 17.0000 0.0100 0.0167 451 601 selected subgrid: 54.4900 57.7500 8.1167 15.0167 points: 327 x 415 = 135705, zero values: 0, unknown (9999): 0 min max mean std.dev.: 31.55 40.99 37.25 2.22 points predicted: 156, skipped points: 0 minimum distance to grid edges for predictions: 28.9 km statistics: mean std.dev. min max unknown original data : 38.737 1.430 34.523 40.906 0 grid interpolation results: 38.737 1.430 34.524 40.906 0 predicted values output : 0.000 0.004 -0.019 0.013 0 Sideeffekter: Producerede data-filer Bem\u00e6rk Alle filer overskrives ved en ny k\u00f8rsel af programmet, hvis ikke de \u00e6ndres/flyttes! Fil Beskrivelse geoid_fitted.gri Den nye fitted geoide fitgeoid_dif.dat Forskel ml. grav geoiden og inputdata \\(N_{obs}\\) fitgeoid_dif2.dat Forskel mellem ny fitted geoide og input data \\(N_{obs}\\) fitgeoid_dif.gri Forskel ml grav geoiden og den nye fittede geoide fitgeoid_dif.err Estimatet p\u00e5 fejlen ved ??? geoidefittet eller prediktering af grid... Program: gbin \u00b6 Eksempler input -eksempel geoid_fitted.gri geoid_fitted.bin 1 input -forklaring Fil Beskrivelse geoid_fitted.gri Inputfil - geoiden som skal fittes geoid_fitted.bin Outputfil - Samme data, bare i bin\u00f8rt format, der kan l\u00e6ses af geoid 1 \u00d8nsket format - 1 => bin\u00e6rt format. output -eksempel input: inputfile outputfile outputformat (1: bin, 2: txt, 3: txt int) --- G B I N --- conversion from text format grid label: 53.500000 58.000000 7.000000 17.000020 0.0100000 0.0166667 number of points in grid: 451 601 271051 mean std.dev. min max unknown/9999 36.63 3.21 27.00 41.31 0 Sideeffekter: Producerede data-filer Fil Beskrivelse geoid_fitted.bin Bin\u00e6r fil med geoide-data Program: geoid \u00b6 Programmet evaluerer et givet punkt (lokation) ud fra en grid-fil med geoide-h\u00f8jder. Eksempler input -eksempel 1 geoid_fitted.bin y point_excluded.dat point_interpolated.dat 1 input -forklaring Fil Beskrivelse 1 Valgt opgave, programmet skal udf\u00f8re geoid_fitted.bin Inputfil - geoiden som skal interpoleres y Yes til at anvende punkt-input fra en fil point_excluded.dat Inputfil - Fil med punkt, der skal interpoleres en v\u00e6rdi for point_interpolated.dat Outputfil - Fil med det \u00f8nskede punkts interpolerede v\u00e6rdi 1 \u00d8nsket format til output-koordinater - 1 => lat, lon (degrees) output -eksempel *************************************************************** * * * GEOID - GRAVSOFT geoid interpolation and transformation * * * * vers. MAR92 (c) RF, Kort- og Matrikelstyrelsen, Denmark * *************************************************************** Enter task: 1 = interpolate geoid heights 2 = ellipsoidal to orthometric heights using geoid 3 = orthometric heights to ellipsoidal - - 4 = geoid heights in different datum ... Enter binary geoid file name: CR=/usr3/geo/proj/DATA/nkg89geoid Geoid grid limits and spacing in degrees: 53.50000 58.00000 7.00000 17.00002 0.01000 0.01667 Do you wish to input data points from a file? (Y/N or CR=N) Enter file name: (CR=geoid.pts) Enter file name for output: (CR=geoid.out) Type of input: 1 = statno, lat, lon (degrees) 2 = statno, lat, lon (deg,min,sec) 3 = statno, X, Y, Z (meter) 4 = statno, N, E (UTM, meter) - output coordinates are geographic degrees - 794721 55.06709414 9.40396933 40.573 --- number of points interpolated: 1, rejected: 0 --- outputfile: point_interpolated.dat Sideeffekter: Producerede data-filer Fil Beskrivelse point_interpolated.dat Outputfil - Fil med det \u00f8nskede punkts interpolerede v\u00e6rdi Kilder \u00b6 GRAVSOFT manual","title":"Standard flow"},{"location":"standard-flow/#overblik-over-de-eksisterende-programmer-og-deres-anvendelse","text":"F\u00f8lgende er en grafisk illustration af, hvilke filer hvert program bruger og producerer. graph TD X(geoid_gravimetric.gri) --> A[fitgeoid1] Y(points_measured.n) -->A A -->|produces| X2(geoid_fitted.gri) A -->|produces| X2a(\"(other files)\") X2 -->B[gbin] B -->|produces| X3(geoid_fitted.bin) X3 --> C[geoid] Z(point_position.dat) --> C C -->|produces| Z2(point_interpolated_geoid_data.dat) style A fill:#f0f1cc style B fill:#f0f1cc style C fill:#f0f1cc style X2a fill:#ddd,stroke:#ccc fitgeoid1 tilpasser en gravimetrisk geoide \\(N_{grav}\\) til observerede geoideh\u00f8jder \\(N_{obs}\\) . gbin overs\u00e6tter geoide-data mellem klar tekst og bin\u00e6rt format. geoid tager geoide-data i bin\u00e6rt format og interpolerer geoide-h\u00f8jden i et givet punkt. Alle tre programmer kan k\u00f8res enten interaktivt eller med forprogrammeret input (via stdin ) efter f\u00f8lgende form: [PROGRAM] < input > output hvor [PROGRAM] \\(\\in\\) \\(\\{\\) fitgeoid1 , gbin , geoid \\(\\}\\) . input og output er arbitr\u00e6re filnavne. input sendes til programmet via stdin og indeholder parametre og filnavne p\u00e5 input data til det p\u00e5g\u00e6ldende program i samme r\u00e6kkef\u00f8lge, det ville komme i under interaktivt input. output overskrives med programmets output til stdout . Endvidere kan programmerne have sideeffekter, som producerede filer (se nedenfor).","title":"Overblik over de eksisterende programmer og deres anvendelse"},{"location":"standard-flow/#program-fitgeoid1","text":"Eksempler input -eksempel geoid_gravimetric.gri geoid_obs_gps+lev.n geoid_fitted.gri 20 1 1 t 60.0 0.004 54 58 7 17 .01 .0166 input -forklaring Fil Beskrivelse geoid_gravimetric.gri Inputfil - geoiden som skal fittes geoid_obs_gps+lev.n Datafil som geoiden skal fittes til geoid_fitted.gri Output geoide efter fit 20 1 1 t Fit parametre: nqmax, itrend, ipred, lsigma Itrend 0=ingen fit, 1= kun bias, 2=plan 60.0 0.004 \u00bd-correlation-length sigma/noise p\u00e5 N(obs) is the smallest std. dev. used when data is given with sigmas 54 58 7 17 .01 .0166 Grid specs lat1 lat2 lon1 lon2 spacing-lat spacing-lon output -eksempel ********************************************************* * FITGEOID - GRAVSOFT geoid fitter - vers. OCT11 * ********************************************************* Internal Lambert map projection center: 55.750 12.000 === Subtraction: Ngps minus geoid grid: === number of prediction points: 156 within area 54.4949 57.7404 8.1231 15.0013 grid file information: gridlab: 53.5000 58.0000 7.0000 17.0000 0.0100 0.0167 451 601 selected subgrid: 54.4900 57.7500 8.1167 15.0167 points: 327 x 415 = 135705, zero values: 0, unknown (9999): 0 min max mean std.dev.: 31.23 40.69 36.92 2.24 points predicted: 156, skipped points: 0 minimum distance to grid edges for predictions: 28.9 km statistics: mean std.dev. min max unknown original data : 38.737 1.430 34.523 40.906 0 grid interpolation results: 38.419 1.452 34.070 40.625 0 predicted values output : 0.318 0.029 0.275 0.479 0 === Gridding of GPS corrections === minimal and maximal standard deviations of data: 0.00 0.00 detrending done on data, itrend = 1 no of trend parameters estimated: 1 solution: 0.3181E+00 detrended data (min,max,mean,stddev): -0.043 0.161 0.000 0.029 collocation prediction - sqrc0,xhalf(km),rmsn = 0.03 60.00 0.00 selection: 20 closest points per quadrant data organization limits in lambert proj: -139278. 222067. -239869. 191036. subrectangles (n,e,total): 7 8 56 size (km): 51.62 53.86, average pts per rect (rdat): 2.786 max points in subrects: 14, percentage with no points: 42.9 predicted: 271051 points prediction pts mean std.dev. min max: 0.33 0.03 0.28 0.47 prediction error values min max: 0.00 0.03 === Addition of gridded corrections to geoid file === number of prediction points: 271051 within area 53.5000 58.0000 7.0000 17.0000 grid file information: gridlab: 53.5000 58.0000 7.0000 17.0000 0.0100 0.0167 451 601 selected subgrid: 53.5000 58.0000 7.0000 17.0000 points: 451 x 601 = 271051, zero values: 0, unknown (9999): 0 min max mean std.dev.: 26.68 40.99 36.30 3.22 points predicted: 271051, skipped points: 0 minimum distance to grid edges for predictions: 0.0 km statistics: mean std.dev. min max unknown original data : 0.328 0.028 0.276 0.475 0 grid interpolation results: 36.300 3.223 26.681 40.990 0 predicted values output : 36.628 3.210 26.999 41.309 0 === Fit of GPS levelling data to fitted geoid === Name of fitted geoid: fg7p_4.gri number of prediction points: 156 within area 54.4949 57.7404 8.1231 15.0013 grid file information: gridlab: 53.5000 58.0000 7.0000 17.0000 0.0100 0.0167 451 601 selected subgrid: 54.4900 57.7500 8.1167 15.0167 points: 327 x 415 = 135705, zero values: 0, unknown (9999): 0 min max mean std.dev.: 31.55 40.99 37.25 2.22 points predicted: 156, skipped points: 0 minimum distance to grid edges for predictions: 28.9 km statistics: mean std.dev. min max unknown original data : 38.737 1.430 34.523 40.906 0 grid interpolation results: 38.737 1.430 34.524 40.906 0 predicted values output : 0.000 0.004 -0.019 0.013 0 Sideeffekter: Producerede data-filer Bem\u00e6rk Alle filer overskrives ved en ny k\u00f8rsel af programmet, hvis ikke de \u00e6ndres/flyttes! Fil Beskrivelse geoid_fitted.gri Den nye fitted geoide fitgeoid_dif.dat Forskel ml. grav geoiden og inputdata \\(N_{obs}\\) fitgeoid_dif2.dat Forskel mellem ny fitted geoide og input data \\(N_{obs}\\) fitgeoid_dif.gri Forskel ml grav geoiden og den nye fittede geoide fitgeoid_dif.err Estimatet p\u00e5 fejlen ved ??? geoidefittet eller prediktering af grid...","title":"Program: fitgeoid1"},{"location":"standard-flow/#program-gbin","text":"Eksempler input -eksempel geoid_fitted.gri geoid_fitted.bin 1 input -forklaring Fil Beskrivelse geoid_fitted.gri Inputfil - geoiden som skal fittes geoid_fitted.bin Outputfil - Samme data, bare i bin\u00f8rt format, der kan l\u00e6ses af geoid 1 \u00d8nsket format - 1 => bin\u00e6rt format. output -eksempel input: inputfile outputfile outputformat (1: bin, 2: txt, 3: txt int) --- G B I N --- conversion from text format grid label: 53.500000 58.000000 7.000000 17.000020 0.0100000 0.0166667 number of points in grid: 451 601 271051 mean std.dev. min max unknown/9999 36.63 3.21 27.00 41.31 0 Sideeffekter: Producerede data-filer Fil Beskrivelse geoid_fitted.bin Bin\u00e6r fil med geoide-data","title":"Program: gbin"},{"location":"standard-flow/#program-geoid","text":"Programmet evaluerer et givet punkt (lokation) ud fra en grid-fil med geoide-h\u00f8jder. Eksempler input -eksempel 1 geoid_fitted.bin y point_excluded.dat point_interpolated.dat 1 input -forklaring Fil Beskrivelse 1 Valgt opgave, programmet skal udf\u00f8re geoid_fitted.bin Inputfil - geoiden som skal interpoleres y Yes til at anvende punkt-input fra en fil point_excluded.dat Inputfil - Fil med punkt, der skal interpoleres en v\u00e6rdi for point_interpolated.dat Outputfil - Fil med det \u00f8nskede punkts interpolerede v\u00e6rdi 1 \u00d8nsket format til output-koordinater - 1 => lat, lon (degrees) output -eksempel *************************************************************** * * * GEOID - GRAVSOFT geoid interpolation and transformation * * * * vers. MAR92 (c) RF, Kort- og Matrikelstyrelsen, Denmark * *************************************************************** Enter task: 1 = interpolate geoid heights 2 = ellipsoidal to orthometric heights using geoid 3 = orthometric heights to ellipsoidal - - 4 = geoid heights in different datum ... Enter binary geoid file name: CR=/usr3/geo/proj/DATA/nkg89geoid Geoid grid limits and spacing in degrees: 53.50000 58.00000 7.00000 17.00002 0.01000 0.01667 Do you wish to input data points from a file? (Y/N or CR=N) Enter file name: (CR=geoid.pts) Enter file name for output: (CR=geoid.out) Type of input: 1 = statno, lat, lon (degrees) 2 = statno, lat, lon (deg,min,sec) 3 = statno, X, Y, Z (meter) 4 = statno, N, E (UTM, meter) - output coordinates are geographic degrees - 794721 55.06709414 9.40396933 40.573 --- number of points interpolated: 1, rejected: 0 --- outputfile: point_interpolated.dat Sideeffekter: Producerede data-filer Fil Beskrivelse point_interpolated.dat Outputfil - Fil med det \u00f8nskede punkts interpolerede v\u00e6rdi","title":"Program: geoid"},{"location":"standard-flow/#kilder","text":"GRAVSOFT manual","title":"Kilder"},{"location":"usage/","text":"Almindelig arbejdsgang for en ny k\u00f8rsel \u00b6 Fra en Anaconda-terminal, aktiv\u00e9r conda -milj\u00f8et gfit conda activate gfit I samme terminal, skift mappe til d\u00e9n pladsering, hvorfra du vil k\u00f8re programmet. cd /sti/til/din/mappe Kopi\u00e9r standard-konfigurationsfilen til denne mappe. cp c:\\gfit\\example\\config.yaml . Har du anvendt programmerne f\u00f8r og \u00f8nsker en separat k\u00f8rsel, s\u00e5 kopi\u00e9r gerne den tidligere konfiguration. V\u00e6r dog opm\u00e6rksom p\u00e5, at konfigurationsfilen har de parametre, der passer til d\u00e9n version af koden, du anvender. Redig\u00e9r konfigurationsfilen, s\u00e5 stierne til data og programmer er sat korrekt stien til mappen med resultaterne er sat til noget, der giver mening for dig. parametre s\u00e5 som sigma er sat til d\u00e9t, du har behov for. K\u00f8r kommandoerne. Tip til test Det kan v\u00e6re en god id\u00e9 at k\u00f8re programmerne med en forkortet liste med m\u00e5lepunkter og sammenholde output fra k\u00f8rslen med en manuel udf\u00f8rsel af de sammen skridt, som gfit udf\u00f8rer. P\u00e5 denne m\u00e5de kan du selv bekr\u00e6fte, at programmet producerer korrekte resultater. BEM\u00c6RK Nedenst\u00e5ende er endnu ikke oversat til dansk fra den engelske version af installationsvejledningen, som blev skrevet i kode-arkivets README-fil. Kommando: gfit-cv \u00b6 This command is the work horse of the tool. for each point in the .n file wth GPS measurements, it creates a work directory containing input and output for fitgeoid1, gbin and geoid. In each work directory one point is excluded from the list of points used for the fit. This point's location is then used to get the interpolated value of the geoid (to be gathered later). First time the program is run, you may see something like this. gfit-cv Completed 4 of 157 processes ( 3%) - / After running each separate process (fitgeoid1, gbin or geoid) for any point, the program creates a .done file (empty dummy file) named after the process, e.g. fitgeoid.done . This file is created to avoid starting over, if you need to run gfit-cv more than once due to an unforeseen error or other (more on this below). Running the command, when some processes were unfinished: gfit-cv 001 completed - skipping Completed 1 of 2 processes ( 50%) - / Running the command, when all processes are finished: gfit-cv 001 completed - skipping (...) 157 completed - skipping Nothing to do. Exiting. Kommando: gfit-check \u00b6 This is a command for checking the output quality. It checks assumptions about the input files (the point-lists in the .n files) and makes sure the correct amount of files were created. Running the command, you, hopefully, see the following. Otherwise, you need to examine the input (or the code). gfit-check No errors (stderr) have been reported in any error-output files. Number of interpolated point-data files (157) same as number of points (157)? True Line occurrences {156} are all the same? True Number of occurrences is N - 1, where N = number of interpolated files 157 = number of points 157? T Kommando: gfit-gather \u00b6 This command gathers all the interpolated fit values at the location of the excluded points and assemples them in a separate column in a copy of the original point file. gfit-gather # no output You will find the output file in the root of output_path . Command: gfit-clean \u00b6 This command lets you, simply, delete all files with the pre-defined extensions. gfit-clean.exe Clean up files ending with '.in'? [y/N] Clean up files ending with '.out'? [y/N] Clean up files ending with '.err'? [y/N] Clean up files ending with '.done'? [y/N] So far it used to clean everything, but may be edited to do more. Or you may create your own cleanup script based on how this module was written:)","title":"Usage"},{"location":"usage/#almindelig-arbejdsgang-for-en-ny-krsel","text":"Fra en Anaconda-terminal, aktiv\u00e9r conda -milj\u00f8et gfit conda activate gfit I samme terminal, skift mappe til d\u00e9n pladsering, hvorfra du vil k\u00f8re programmet. cd /sti/til/din/mappe Kopi\u00e9r standard-konfigurationsfilen til denne mappe. cp c:\\gfit\\example\\config.yaml . Har du anvendt programmerne f\u00f8r og \u00f8nsker en separat k\u00f8rsel, s\u00e5 kopi\u00e9r gerne den tidligere konfiguration. V\u00e6r dog opm\u00e6rksom p\u00e5, at konfigurationsfilen har de parametre, der passer til d\u00e9n version af koden, du anvender. Redig\u00e9r konfigurationsfilen, s\u00e5 stierne til data og programmer er sat korrekt stien til mappen med resultaterne er sat til noget, der giver mening for dig. parametre s\u00e5 som sigma er sat til d\u00e9t, du har behov for. K\u00f8r kommandoerne. Tip til test Det kan v\u00e6re en god id\u00e9 at k\u00f8re programmerne med en forkortet liste med m\u00e5lepunkter og sammenholde output fra k\u00f8rslen med en manuel udf\u00f8rsel af de sammen skridt, som gfit udf\u00f8rer. P\u00e5 denne m\u00e5de kan du selv bekr\u00e6fte, at programmet producerer korrekte resultater. BEM\u00c6RK Nedenst\u00e5ende er endnu ikke oversat til dansk fra den engelske version af installationsvejledningen, som blev skrevet i kode-arkivets README-fil.","title":"Almindelig arbejdsgang for en ny k\u00f8rsel"},{"location":"usage/#kommando-gfit-cv","text":"This command is the work horse of the tool. for each point in the .n file wth GPS measurements, it creates a work directory containing input and output for fitgeoid1, gbin and geoid. In each work directory one point is excluded from the list of points used for the fit. This point's location is then used to get the interpolated value of the geoid (to be gathered later). First time the program is run, you may see something like this. gfit-cv Completed 4 of 157 processes ( 3%) - / After running each separate process (fitgeoid1, gbin or geoid) for any point, the program creates a .done file (empty dummy file) named after the process, e.g. fitgeoid.done . This file is created to avoid starting over, if you need to run gfit-cv more than once due to an unforeseen error or other (more on this below). Running the command, when some processes were unfinished: gfit-cv 001 completed - skipping Completed 1 of 2 processes ( 50%) - / Running the command, when all processes are finished: gfit-cv 001 completed - skipping (...) 157 completed - skipping Nothing to do. Exiting.","title":"Kommando: gfit-cv"},{"location":"usage/#kommando-gfit-check","text":"This is a command for checking the output quality. It checks assumptions about the input files (the point-lists in the .n files) and makes sure the correct amount of files were created. Running the command, you, hopefully, see the following. Otherwise, you need to examine the input (or the code). gfit-check No errors (stderr) have been reported in any error-output files. Number of interpolated point-data files (157) same as number of points (157)? True Line occurrences {156} are all the same? True Number of occurrences is N - 1, where N = number of interpolated files 157 = number of points 157? T","title":"Kommando: gfit-check"},{"location":"usage/#kommando-gfit-gather","text":"This command gathers all the interpolated fit values at the location of the excluded points and assemples them in a separate column in a copy of the original point file. gfit-gather # no output You will find the output file in the root of output_path .","title":"Kommando: gfit-gather"},{"location":"usage/#command-gfit-clean","text":"This command lets you, simply, delete all files with the pre-defined extensions. gfit-clean.exe Clean up files ending with '.in'? [y/N] Clean up files ending with '.out'? [y/N] Clean up files ending with '.err'? [y/N] Clean up files ending with '.done'? [y/N] So far it used to clean everything, but may be edited to do more. Or you may create your own cleanup script based on how this module was written:)","title":"Command: gfit-clean"}]}